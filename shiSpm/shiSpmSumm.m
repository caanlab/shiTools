function RET = shiSpmSumm(xSPM,TabDat,Radius,SaveAs)

% organizes SPM result table when it is open in SPM - Results
%
%   The best practice is to define a shortcut at MATLAB toolstrip, and
%   press the button when a result table is generated by SPM (when xSPM and
%   TabDat can be found in the workspace).
% 
% RET = shiSpmSumm(xSPM,TabDat)
% RET = shiSpmSumm(xSPM,TabDat,Radius)
% RET = shiSpmSumm(xSPM,TabDat,Radius,SaveAs)
%   If StatInfo.mat exists (see shiSpmStat*.m functions), then ROI values
%   from each individual map will be extracted (ROIs defined as 5-mm
%   spheres at peaks).
% 
%   Radius - radius of ROIs (default = 5)
%            (only functions when StatInfo.mat exists)
%   SaveAs - .mat file name to save RET (default = '', i.e. do not save)
% 
%    ###########
% by Zhenhao Shi @ 2018-1-6
%    ###########
% 

if nargin < 3
    Radius = 5;
end
if nargin < 4
    SaveAs = '';
end

if isempty(SaveAs)
    doSaveAs = false;
else
    [Path,~,~] = fileparts(SaveAs);
    if ~isempty(Path) && ~isdir(Path)
        mkdir(Path);
    end
    doSaveAs = true;
end

Thres.Descr     =   xSPM.thresDesc;
Thres.K         =   xSPM.k;
Thres.StatType  =   xSPM.STAT;
Thres.Stat      =   xSPM.u;
Thres.Df        =   xSPM.df(xSPM.df>0);

if strcmpi(Thres.StatType,'T')
    Thres.P = 1-tcdf(Thres.Stat,Thres.Df);
else
    Thres.P = 1-fcdf(Thres.Stat,Thres.Df(1),Thres.Df(2));
end

Dir             =   xSPM.swd;

Img_Mask        =   xSPM.Im;

Img_Stat        =   fullfile(Dir,xSPM.Vspm.fname);

Act.IndexCluster = zeros(size(TabDat.dat,1),1);
Act.IsPeak = zeros(size(TabDat.dat,1),1)>2;
Act.K = zeros(size(TabDat.dat,1),1);
Act.Coord = TabDat.dat(:,12);
Act.Z = cell2mat(TabDat.dat(:,10));
ind = 0;
for i = 1:length(Act.IsPeak)
    if ~isempty(TabDat.dat{i,5}) % k value column
        ind = ind + 1;
        Act.IsPeak(i) = true;
        Act.K(i) = TabDat.dat{i,5};
    else
        Act.IsPeak(i) = false;
        Act.K(i) = Act.K(i-1);
    end
    Act.IndexCluster(i) = ind;
    Act.Coord{i} = Act.Coord{i}';
end
Act.AalLabel = shiSpmAnatLabel('AAL',Act.Coord,Radius);

try
    % only works if StatInfo.mat has been saved
    StatInfo        =   load('StatInfo.mat');
    Roi.IsPeak = Act.IsPeak;
    Roi.Coord = Act.Coord;
    if ~isempty(Act.Coord) && isfield(StatInfo,'ImgDataOut') % PairedT
        Roi.X = shiSpmRoiXtr(StatInfo.ImgDataOut,Act.Coord,Radius);
        Roi.X1 = shiSpmRoiXtr(StatInfo.Img1,Act.Coord,Radius);
        Roi.X2 = shiSpmRoiXtr(StatInfo.Img2,Act.Coord,Radius);
    elseif ~isempty(Act.Coord) && isfield(StatInfo,'Img1') && isfield(StatInfo,'Img2') % TwoSampleT
        Roi.X = shiSpmRoiXtr([StatInfo.Img1;StatInfo.Img2],Act.Coord,Radius);
        Roi.X1 = Roi.X(1:length(StatInfo.Img1),:);
        Roi.X2 = Roi.X(length(StatInfo.Img1)+1:end,:);
    elseif ~isempty(Act.Coord) && isfield(StatInfo,'Img') % OneSampleT,Corr,Regress
        Roi.X = shiSpmRoiXtr(StatInfo.Img,Act.Coord,Radius);
    else
        warning('no ROI extracted');
    end
    Roi.Radius = Radius;
    Roi.AalLabel = Act.AalLabel;
catch
    StatInfo=struct([]);
    Roi=struct([]);
    warning('cannot find StatInfo.mat');
end 

RET.Dir = Dir;
RET.Img_Stat = Img_Stat;
RET.Img_Mask = Img_Mask;
RET.Thres = Thres;
RET.Act = Act;
RET.Roi = Roi;
RET.StatInfo = StatInfo;

if doSaveAs
    save(SaveAs,'RET');
end
    



